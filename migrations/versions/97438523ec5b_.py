"""empty message

Revision ID: 97438523ec5b
Revises: 
Create Date: 2019-06-13 09:20:24.319447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '97438523ec5b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('video')
    op.drop_table('provinces')
    op.drop_table('brands')
    op.drop_table('static')
    op.drop_table('stores')
    op.drop_table('about')
    op.drop_table('countries')
    op.drop_table('fm')
    op.drop_table('biotech')
    op.drop_table('boxes')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('boxes',
    sa.Column('box_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"boxes_box_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('min_weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('max_weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('length', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('box_ID', name=u'boxes_pkey')
    )
    op.create_table('biotech',
    sa.Column('biotech_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"biotech_biotech_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('disable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('biotech_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('biotech_desc', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('biotech_ID', name=u'biotech_pkey'),
    sa.UniqueConstraint('biotech_name', name=u'biotech_biotech_name_key')
    )
    op.create_table('fm',
    sa.Column('fm_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"fm_fm_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('mda_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('financial_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('q', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('fm_ID', name=u'fm_pkey')
    )
    op.create_table('countries',
    sa.Column('country_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"countries_country_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('country_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('Dp_filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('country_ID', name=u'countries_pkey'),
    sa.UniqueConstraint('country_name', name=u'countries_country_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('about',
    sa.Column('about_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"about_about_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('disable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('about_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('about_desc', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('about_ID', name=u'about_pkey'),
    sa.UniqueConstraint('about_name', name=u'about_about_name_key')
    )
    op.create_table('stores',
    sa.Column('store_id', sa.INTEGER(), nullable=False),
    sa.Column('store_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('map_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('province', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('latitude', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('brands', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('icon_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('store_id', name=u'stores_pkey')
    )
    op.create_table('static',
    sa.Column('static_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"static_static_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('static_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('static_content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('static_ID', name=u'static_pkey'),
    sa.UniqueConstraint('static_name', name=u'static_static_name_key')
    )
    op.create_table('brands',
    sa.Column('brand_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"brands_brand_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('disable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('brand_uri', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('brand_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('brand_desc', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('brand_ID', name=u'brands_pkey'),
    sa.UniqueConstraint('brand_name', name=u'brands_brand_name_key')
    )
    op.create_table('provinces',
    sa.Column('province_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"provinces_province_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('country_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('province_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('shipping_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('air_shipping_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('set_amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gst', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pst', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_ID'], [u'countries.country_ID'], name=u'provinces_country_ID_fkey', ondelete=u'CASCADE'),
    sa.PrimaryKeyConstraint('province_ID', name=u'provinces_pkey'),
    sa.UniqueConstraint('province_name', name=u'provinces_province_name_key')
    )
    op.create_table('video',
    sa.Column('video_ID', sa.INTEGER(), server_default=sa.text(u'nextval(\'"video_video_ID_seq"\'::regclass)'), nullable=False),
    sa.Column('video_link', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('video_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('video_ID', name=u'video_pkey')
    )
    # ### end Alembic commands ###
